+ Только один модуль в программе.
+ Скалярные типы данных: только один целочисленный, один с плавающей точкой, один строковый.
- Составные типы данных: только записи/структуры и массивы.
- Управляющие конструкции: только + блоки, + условия, + циклы, - структурные переходы.
+ Процедуры / функции: только глобальные статические, с параметрами по значению и по ссылке.
? Библиотеки: только ввод/вывод на стандартные потоки, по одной функции.
- Минусовые значения
- Значения из массивов или из записей

+ comparison ::= (simple condition) ('<' | '<=' | '>' | '>=' | '=' | '<>') (simple condition)
+ simple condition ::=  ('not' | '')(simple expression) { ('and' | 'or') ('not' | '')(simple expression) }

+ block ::= 'begin' {(statement) ';'} 'end'

+ simple statement ::= (var | func) (':=' | '+=' | '-=' | '*=' | '/=') (simple expression)

+ statement ::= (block) | (simple statement) | (operator) | (procedure)

+ variable declaration ::= {(identifier) ':' (type) '=' (expression) ';'}

+ procedure ::= 'procedure' (identifier) '(' (variable declaration) { ',' (variable declaration) } ')' ':' (type) ';' (compoud statement)

+ condition ::= ('not' | '')(comparison) { ('and' | 'or') ('not' | '')(comparison) }

+ operator ::= 
+ (if ::= 'if' (condition) 'then' (statement) 'else' (statement) |
+ (for ::= 'for' (initial value) 'to' (final value) 'do' (statement) |
+ (while ::= 'while' (condition) 'do' (statement) |
+ (repeat ::= 'repeat' {(statement) ';'}) 'until' (condition)

+ command ::= ('break') | ('continue') | ('exit') | (('halt') '(' (int) ')')

? out ::= 'write' '(' ( (string) | (integer) | (real) { ',' (string) | (integer) | (real) } ) ')'
? in ::= 'read' '(' ( (string) | (integer) | (real) { ',' (string) | (integer) | (real) } ) ')'

type
- array
- struct

- goto

- const ::= (indifier) '=' (value)